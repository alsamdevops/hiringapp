
pipeline {
    agent any

    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
	DOCKER_IMAGE = "aslamdevops/hiring-app:${BUILD_NUMBER}"
        GIT_REPO = "git@github.com:alsamdevops/Hiring-app-argocd.git"
        MANIFEST_PATH = "dev/deployment.yaml"
    }

    stages {

        stage('Docker Build') {
            steps {
                sh "docker build . -t aslamdevops/hiring-app:$BUILD_NUMBER"
            }
        }

        stage('Docker Push') {
            steps {
                withCredentials([string(credentialsId: 'docker-hub', variable: 'hubPwd')]) {
                    sh "echo ${hubPwd} | docker login -u aslamdevops --password-stdin"
                    sh "docker push aslamdevops/hiring-app:$BUILD_NUMBER"
                }
            }
        }

        stage('Checkout K8S manifest SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/alsamdevops/hiring-argo-cicd.git'
            }
        }

        stage('Update K8S manifest & push to Repo') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Github_server', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                        echo "Before update:"
                        cat ${MANIFEST_PATH}

                        # Replace version/tag dynamically
                         sed -i "s|image: .*/hiring-app:.*|image: ${DOCKER_IMAGE}|g" ${MANIFEST_PATH}

                        echo "After update:"
                        cat ${MANIFEST_PATH}

                        git config user.email "aslamdevops@outlook.com"
                        git config user.name "Mohammed Aslam"

                        git add ${MANIFEST_PATH}
                        git commit -m "Updated deploy yaml to build ${BUILD_NUMBER} | Jenkins Pipeline" || echo "No changes to commit"

                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/alsamdevops/hiring-argo-cicd.git main
                        '''
                    }
                }
            }
        }
    }
}

